{
  "enabled": true,
  "name": "Security Vulnerability Scanner",
  "description": "Automatically reviews changed files for potential security issues including API keys, tokens, credentials, private keys, encryption keys, certificates, authentication tokens, session IDs, passwords, secrets in configuration files, IP addresses with sensitive data, hardcoded internal URLs, and database connection credentials",
  "version": "1",
  "when": {
    "type": "fileEdited",
    "patterns": [
      "src/**/*.ts",
      "src/**/*.tsx",
      "src/**/*.js",
      "src/**/*.jsx",
      "convex/**/*.ts",
      "convex/**/*.js",
      ".env*",
      "*.config.js",
      "*.config.ts",
      "package.json",
      "*.json",
      "*.md",
      "*.yml",
      "*.yaml"
    ]
  },
  "then": {
    "type": "askAgent",
    "prompt": "Review the changed files for potential security issues. Specifically look for:\n\n1. API keys, tokens, or credentials in source code\n2. Private keys or sensitive credentials  \n3. Encryption keys or certificates\n4. Authentication tokens or session IDs\n5. Passwords or secrets in configuration files\n6. IP addresses containing sensitive data\n7. Hardcoded internal URLs\n8. Database connection credentials\n\nFor each security issue found:\n1. Highlight the specific security risk and its location\n2. Suggest a secure alternative approach (environment variables, secure storage, etc.)\n3. Recommend security best practices for that type of credential\n\nFocus on practical, actionable security recommendations that align with the project's React/TypeScript/Convex tech stack."
  }
}